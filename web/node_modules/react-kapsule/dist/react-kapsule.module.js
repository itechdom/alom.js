import React from 'react';

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  }
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function index (kapsuleComponent) {
  var wrapperElType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'div';
  var bindMethodNames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var initProps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];

  var FromKapsuleComp =
  /*#__PURE__*/
  function (_React$PureComponent) {
    _inherits(FromKapsuleComp, _React$PureComponent);

    function FromKapsuleComp(props) {
      var _this;

      _classCallCheck(this, FromKapsuleComp);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(FromKapsuleComp).call(this, props));

      _defineProperty(_assertThisInitialized(_this), "_call", function (method) {
        var _this$state$comp;

        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        return _this.state.comp[method] instanceof Function ? (_this$state$comp = _this.state.comp)[method].apply(_this$state$comp, args) : undefined;
      });

      _defineProperty(_assertThisInitialized(_this), "_getDynamicProps", function () {
        var dynamicProps = Object.assign({}, _this.props);
        initProps.forEach(function (initProp) {
          return delete dynamicProps[initProp];
        }); // initProps should not be called

        return dynamicProps;
      });

      var configOptions = Object.assign.apply(Object, [{}].concat(_toConsumableArray(initProps.filter(function (p) {
        return props.hasOwnProperty(p);
      }).map(function (prop) {
        return _defineProperty({}, prop, props[prop]);
      }))));
      _this.state = {
        comp: kapsuleComponent(configOptions)
      };
      return _this;
    } // Call a component method


    _createClass(FromKapsuleComp, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        Object.keys(this._getDynamicProps()).forEach(function (p) {
          _this2._call(p, _this2.props[p]);
        });
        this.state.comp(this.rootElem);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var _this3 = this;

        Object.keys(this._getDynamicProps()).forEach(function (p) {
          if (prevProps[p] !== _this3.props[p]) {
            _this3._call(p, _this3.props[p]);
          }
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        // Invoke _destructor, if it exists
        if (this.state.comp._destructor instanceof Function) {
          this.state.comp._destructor();
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return React.createElement(wrapperElType, {
          ref: function ref(elem) {
            _this4.rootElem = elem;
          }
        });
      }
    }]);

    return FromKapsuleComp;
  }(React.PureComponent);

  bindMethodNames.forEach(function (method) {
    FromKapsuleComp.prototype[method] = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return this._call.apply(this, [method].concat(args));
    };
  });
  return FromKapsuleComp;
}

export default index;
